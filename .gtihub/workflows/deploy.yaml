# name: Deploy to Render

# # Run workflow on every push to main branch.
# on:
#   push:
#     branches: [main]

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       # Checkout the repository.
#       - name: Checkout
#         uses: actions/checkout@v2

#       ### ⬇ IMPORTANT PART ⬇ ###
      
#       # Build, Push and Release Docker container to Render.
#       - name: Build, Push and Release a Docker container to Render
#         uses: render-examples/ci-docker-deploy@v1
#         with:
#           # Below you must provide variables for your Render app.

#           # Email address associated with your Render account.
#           # You can either use repository secrets or directly specify the email.
#           email: ${{ secrets.RENDER_EMAIL }} 

#           # Render API key.
#           # The API key is available under your Render account settings.
#           api_key: ${{ secrets.RENDER_API_KEY }}

#           # Name of the Render application to which the build is to be sent.
#           app_name: ${{ secrets.RENDER_APP_NAME }}

#           # Dockerfile directory.
#           dockerfile_directory: ./   # You can change this if your Dockerfile is in a subdirectory.

#           # Dockerfile name.
#           dockerfile_name: Dockerfile

#           # Docker build options (Optional, default: "--no-cache").
#           docker_options: "--no-cache"  # Optional.

#           # Select the process type for which you want the Docker container to be uploaded.
#           process_type: web   # This is typically "web" for web services, but can be changed as needed.

#       ### ⬆ IMPORTANT PART ⬆ ###



name: Build and Push Docker Image to DockerHub

on:
  push:
    branches:
      - main  # or your default branch name

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code from your GitHub repo
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 3: Build the Docker image
      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/your-app-name:latest .

      # Step 4: Push the Docker image to DockerHub
      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/your-app-name:latest
